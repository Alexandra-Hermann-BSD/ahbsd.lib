digraph "ahbsd.lib.ChangeEventArgs&lt; T &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ahbsd.lib.ChangeEventArgs\< T \>\n|+ T OldValue\l+ T NewValue\l|+  ChangeEventArgs()\l+  ChangeEventArgs(T\l oldValue, T newValue)\l+  ChangeEventArgs(T\l oldValue)\l+ void SetNewValue(T\l newValue)\l+ override string ToString()\l+ bool Equals(IChangeEvent\lArgs\< T \> other)\l+ override bool Equals\l(object obj)\l+ override int GetHashCode()\l+ static bool operator\l==(ChangeEventArgs\< T\l \> left, ChangeEventArgs\l\< T \> right)\l+ static bool operator!\l=(ChangeEventArgs\< T\l \> left, ChangeEventArgs\l\< T \> right)\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Generic EventArgs for changing values."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{EventArgs\n|+ T Value\l|+  EventArgs()\l+  EventArgs(T val)\l}",height=0.2,width=0.4,color="black",URL="$d0/d7d/classahbsd_1_1lib_1_1EventArgs.html",tooltip="Generic EventArgs."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{IEventArgs\< T \>\n|+ T Value\l|}",height=0.2,width=0.4,color="black",URL="$d1/d80/interfaceahbsd_1_1lib_1_1IEventArgs.html",tooltip="Interface for generic EventArgs."];
  Node4 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{IChangeEventArgs\< T \>\n|+ T OldValue\l+ T NewValue\l|+ void SetNewValue(T\l newValue)\l+ string ToString()\l}",height=0.2,width=0.4,color="black",URL="$d6/d8f/interfaceahbsd_1_1lib_1_1IChangeEventArgs.html",tooltip="Interface for generic EventArgs for changing values."];
}
